/*! minnpost-snow-emergency - v0.0.0 - 2014-02-19
* https://github.com/minnpost/minnpost-snow-emergency
* Copyright (c) 2014 MinnPost; Licensed MIT */

define("helpers",["jquery","underscore"],function(a,b){return b.mixin({deepClone:function(a){return JSON.parse(JSON.stringify(a))}}),{formatNumber:function(a,c){c=b.isUndefined(c)?2:c;var d=/(\d+)(\d{3})/;for(split=a.toFixed(c).toString().split(".");d.test(split[0]);)split[0]=split[0].replace(d,"$1,$2");return c?split[0]+"."+split[1]:split[0]},formatCurrency:function(a){return"$"+this.formatNumber(a,2)},formatPercent:function(a){return this.formatNumber(100*a,1)+"%"},formatPercentChange:function(a){return(a>0?"+":"")+this.formatPercent(a)},hash:function(a){return Math.abs(b.reduce(a.split(""),function(a,b){return a=(a<<5)-a+b.charCodeAt(0),a&a},0))},identifier:function(a){return a.toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-").replace(/[^\w-]+/g,"")},isMSIE:function(){var a=/(msie) ([\w.]+)/i.exec(navigator.userAgent);return a?parseInt(a[2],10):!1},jsonpRequest:function(){var c=arguments[0];return c.dataType="jsonp",c.jsonpCallback="mpServerSideCachingHelper"+b.hash(c.url),a.ajax.apply(a,[c])},getLocalData:function(c,d){var e=this,f=d.jsonpProxy,g=!1,h=[];return this.data=this.data||{},c=b.isArray(c)?c:[c],d&&0===d.dataPath.indexOf("http")&&(g=!0),b.each(c,function(c){var i;b.isUndefined(e.data[c])&&(i=g?e.jsonpRequest({url:f+encodeURI(d.dataPath+c+".json")}):a.getJSON(d.dataPath+c+".json"),a.when(i).done(function(a){e.data[c]=a}),h.push(i))}),a.when.apply(a,h)},getRemoteData:function(b){return b.dataType="jsonp",this.options.remoteProxy&&(b.url=b.url+"&callback=proxied_jqjsp",b.url=app.options.remoteProxy+encodeURIComponent(b.url),b.callback="proxied_jqjsp",b.cache=!0),a.ajax(b)}}}),define("text!templates/application.mustache",[],function(){return'<div class="message-container"></div>\n\n<div class="content-container">\n  {{^isSnowEmergency}}\n    <div class="narrative">\n      <h3>There is no snow emergency at the moment</h3>\n      <p>To plan ahead, set a snow emergency day:\n        <select value="{{ chooseDay }}">\n          <option value="">&lt;pick a day&gt;</option>\n          <option value="1">Day 1</option>\n          <option value="2">Day 2</option>\n          <option value="3">Day 3</option>\n        </select>\n      </p>\n    </div>\n  {{/isSnowEmergency}}\n\n  {{#isSnowEmergency}}\n    <div class="narrative">\n      <h3>It is Day {{ snowEmergencyDay }} of the snow emergency</h3>\n\n      <div class="snow-emergency-day-status">\n        {{#(snowEmergencyDay === 1)}}\n          <p>That means from 9PM to 8AM (overnight), you cannot park on streets that are marked as snow emergency routes.  These are routes with specific signs or blue street signs.</p>\n        {{/()}}\n\n        {{#(snowEmergencyDay === 2)}}\n          <p>That means from 8AM to 8PM, you cannot park on the even side of the street or parkways on non-snow emergency routes.  The even side of the street is most often the north and west sides of streets.</p>\n        {{/()}}\n\n        {{#(snowEmergencyDay === 3)}}\n          <p>That means from 8AM to 8PM, you cannot park on the odd side of the street  on non-snow emergency routes.  The odd side of the street is most often the south and east sides of streets.</p>\n        {{/()}}\n      </div>\n    </div>\n\n    <form proxy-submit="formSubmit" class="location-search-form">\n      <p>Search for an address to see parking restrictions near you.</p>\n      <input type="text" class="address-input" value="{{ address }}" placeholder="Enter address, ex. 900 6th Ave SE, Minneapolis, MN 55414" />\n      <button type="submit" title="Search address" on-tap="addressSearch">Search</button>\n      <button type="submit" class="geolocation-button" title="Use the location of your device" on-tap="geolocateSearch"></button>\n    </form>\n\n    <div class="narrative">\n      {{#(isLoading === true)}}\n        {{>loading}}\n      {{/())}}\n\n      {{#messages}}\n        <p class="messages">{{ messages }}</p>\n      {{/messages}}\n\n      {{#(nearParking !== undefined)}}\n        {{#nearParking}}\n          <p>Looks like you shouldn\'t park there.  Check the map to be sure.</p>\n        {{/nearParking}}\n\n        {{^nearParking}}\n          <p>Looks like you are clear to park here.  Check the map to be sure.</p>\n        {{/nearParking}}\n\n        <div class="note">And follow any other posted parking signs.</div>\n      {{/()}}\n    </div>\n\n    <div id="snow-emergency-map"></div>\n  {{/isSnowEmergency}}\n\n</div>\n\n<div class="footnote-container">\n  <div class="footnote">\n    <p>Some map data &copy; OpenStreetMap contributors; licensed under the <a href="http://www.openstreetmap.org/copyright" target="_blank">Open Data Commons Open Database License</a>.  Some map design &copy; MapBox; licensed according to the <a href="http://mapbox.com/tos/" target="_blank">MapBox Terms of Service</a>.  Location geocoding provided by <a href="http://www.mapquest.com/" target="_blank">Mapquest</a> and is not guaranteed to be accurate.  Some mapping services provided by <a href="http://cartodb.com/attributions" target="_blank">CartoDB</a>.  Snow plow route data provided by the City of Minneapolis.  Some code, techniques, and data on <a href="https://github.com/zzolo/minnpost-snow-emergency" target="_blank">Github</a>.  <a href="http://thenounproject.com/term/compass/30717/" target="_blank">Compass</a> designed by Chris Kerr from the the Noun Project.  <a href="http://thenounproject.com/term/snowed-in/30065/">Snowed In</a> designed by Claire Jones from the Noun Project.</p>\n\n  </div>\n</div>\n'}),define("text!templates/loading.mustache",[],function(){return'<div class="loading-container">\n  <div class="loading"><span>Loading...</span></div>\n</div>'}),require.config({shim:{cartodb:{exports:"cartodb"}},baseUrl:"js",paths:{requirejs:"../bower_components/requirejs/require",text:"../bower_components/text/text",jquery:"../bower_components/jquery/jquery.min",underscore:"../bower_components/underscore/underscore",Ractive:"../bower_components/ractive/build/Ractive-legacy.min","Ractive-events-tap":"../bower_components/ractive-events-tap/Ractive-events-tap.min",moment:"../bower_components/moment/min/moment.min",cartodb:"../bower_components/cartodb.js/dist/cartodb","minnpost-snow-emergency":"app"}}),define("minnpost-snow-emergency",["jquery","underscore","helpers","Ractive","Ractive-events-tap","cartodb","text!templates/application.mustache","text!templates/loading.mustache"],function(a,b,c,d,e,f,g,h){var i=window.L;f=window.cartodb;var j=function(c){this.options=b.extend(this.defaultOptions,c),this.el=this.options.el,this.el&&(this.$el=a(this.el),this.$content=this.$el.find(".content-container"))};return b.extend(j.prototype,{start:function(){var a=this;this.data={},this.data.snowEmergencyDay=3,this.data.isSnowEmergency=!0,this.data.isLoading=!1,this.data.nearParking=void 0,this.data.chooseDay=void 0,this.data.canGeoLocate=this.checkGeolocate(),this.mainView=new d({el:this.$el,template:g,data:this.data,partials:{loading:h}}),this.mainView.observe("isSnowEmergency",function(c){c===!0&&b.defer(b.bind(a.makeMap(),a))},{defer:!0}),this.mainView.observe("chooseDay",function(a){a=parseInt(a,10),b.isNaN(a)||(this.set("snowEmergencyDay",a),this.set("isSnowEmergency",!0))}),this.mainView.on("formSubmit",function(b){b.original.preventDefault(),a.searchAddress(this.get("address"))}),this.mainView.on("addressSearch",function(b){b.original.preventDefault(),a.searchAddress(this.get("address"))}),this.mainView.on("geolocateSearch",function(b){b.original.preventDefault(),a.watchID||a.geolocate()})},makeMap:function(){this.map=new i.Map("snow-emergency-map",{center:[44.970753517451946,-93.26185335000002],zoom:12,minZoom:10,maxZoom:17,scrollWheelZoom:!1}),i.tileLayer("//{s}.tiles.mapbox.com/v3/minnpost.map-wi88b700/{z}/{x}/{y}.png").addTo(this.map),this.map.removeControl(this.map.attributionControl),f.createLayer(this.map,"http://zzolo-minnpost.cartodb.com/api/v2/viz/3fb9a154-9604-11e3-b5ac-0e625a1c94a6/viz.json").addTo(this.map).on("done",function(){}).on("error",function(){this.issue("There was an error loading the snow route information.")})},geolocate:function(){var a=this;this.resetSearch(),this.watchID=navigator.geolocation.watchPosition(function(b){a.closestRoutes(b.coords.latitude,b.coords.longitude,b.coords.accuracy)},function(){a.issue("There was an error trying to find your position.")},{maximumAge:1200})},searchAddress:function(c){var d=this;c&&(d.resetSearch(),this.watchID&&(navigator.geolocation.clearWatch(this.watchID),this.watchID=void 0),a.getJSON(this.options.mapQuestQuery.replace("[[[ADDRESS]]]",c),function(a){var c;b.size(a.results[0].locations)>0&&b.isObject(a.results[0].locations[0].latLng)?(c=a.results[0].locations[0].latLng,d.closestRoutes(c.lat,c.lng)):this.issue("That address could not be found, please try another or more specific one.")}))},closestRoutes:function(b,c,d){var e,f=this;return b<this.options.minneapolisExtent[1]||b>this.options.minneapolisExtent[3]||c<this.options.minneapolisExtent[0]||c>this.options.minneapolisExtent[2]?void this.issue("This location does not seem to be in Minneapolis."):(this.location=[b,c],this.map.setView([b,c],17),e="SELECT the_geom, day1, day2, day3, cartodb_id, id, ST_SetSRID(the_geom, 4326) <-> ST_SetSRID(ST_MakePoint("+c+", "+b+") , 4326) AS distance  FROM snow_routes ORDER BY ST_SetSRID(the_geom, 4326) <-> ST_SetSRID(ST_MakePoint("+c+", "+b+") , 4326) ASC LIMIT 50",void a.getJSON("http://zzolo-minnpost.cartodb.com/api/v2/sql?format=GeoJSON&q="+e,function(a){f.renderRoutes(a,d)}))},renderRoutes:function(a,c){var d=this,e=b.deepClone(a),f=0===b.first(e.features).properties["day"+this.data.snowEmergencyDay.toString()]?!0:!1;c=c||15,this.mainView.set("messages",""),b.isObject(this.routeLayer)&&(this.map.removeLayer(this.routeLayer),this.map.removeLayer(this.locationLayer)),this.mainView.set("isLoading",!1),this.mainView.set("nearParking",f),a.features=b.filter(a.features,function(a){return 0===a.properties["day"+d.data.snowEmergencyDay.toString()]?!0:!1}),this.routeLayer=new i.geoJson(a,{style:function(){return{fillColor:d.options.colors.dontPark,color:d.options.colors.dontPark,weight:1,opacity:.5,fillOpacity:.75,clickable:!1}}}),this.locationLayer=i.circleMarker(this.location,{radius:8,fillColor:"#10B21A",color:"#10B21A",weight:c/5,opacity:.45,fillOpacity:.85,clickable:!1}),this.map.addLayer(this.routeLayer),this.map.addLayer(this.locationLayer)},resetSearch:function(){this.mainView.set("isLoading",!0),this.mainView.set("nearParking",void 0),this.mainView.set("messages",!1)},checkGeolocate:function(){return b.isObject(navigator)&&b.isObject(navigator.geolocation)},issue:function(a){this.mainView.set("isLoading",!1),this.mainView.set("messages",a)},defaultOptions:{projectName:"minnpost-snow-emergency",minneapolisExtent:[-93.3292,44.8896,-93.1978,45.0512],mapQuestQuery:"http://www.mapquestapi.com/geocoding/v1/address?key=Fmjtd%7Cluub2d01ng%2C8g%3Do5-9ua20a&outFormat=json&callback=?&countrycodes=us&maxResults=1&location=[[[ADDRESS]]]",colors:{day1:"#009BC2",day2:"#7525BB",day3:"#FF7424",dontPark:"#B22715"}}}),j});