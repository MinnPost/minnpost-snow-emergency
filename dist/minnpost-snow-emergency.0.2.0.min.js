/*! minnpost-snow-emergency - v0.2.0 - 2014-11-12
* https://github.com/minnpost/minnpost-snow-emergency
* Copyright (c) 2014 MinnPost; Licensed MIT */

define("text!../bower.json",[],function(){return'{\n  "name": "minnpost-snow-emergency",\n  "version": "0.2.0",\n  "main": "index.html",\n  "homepage": "https://github.com/minnpost/minnpost-snow-emergency",\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/minnpost/minnpost-snow-emergency"\n  },\n  "bugs": "https://github.com/minnpost/minnpost-snow-emergency/issues",\n  "license": "MIT",\n  "author": {\n    "name": "MinnPost",\n    "email": "data@minnpost.com"\n  },\n  "dependencies": {\n    "moment": "~2.8.3",\n    "jquery": "^1.11",\n    "ractive": "^0.5.8",\n    "ractive-events-tap": "~0.1.0",\n    "requirejs": "~2.1.11",\n    "text": "~2.0.10",\n    "underscore": "~1.7.0",\n    "cartodb.js": "~3.11.30",\n    "almond": "~0.3.0",\n    "backbone": "~1.1.2",\n    "minnpost-styles": "master",\n    "rgrove-lazyload": "*",\n    "ractive-backbone": "~0.2.0"\n  },\n  "dependencyMap": {\n    "requirejs": {\n      "rname": "requirejs",\n      "js": [\n        "requirejs/require"\n      ]\n    },\n    "almond": {\n      "rname": "almond",\n      "js": [\n        "almond/almond"\n      ]\n    },\n    "text": {\n      "rname": "text",\n      "js": [\n        "text/text"\n      ]\n    },\n    "jquery": {\n      "rname": "jquery",\n      "js": [\n        "jquery/dist/jquery"\n      ],\n      "returns": "$"\n    },\n    "underscore": {\n      "rname": "underscore",\n      "js": [\n        "underscore/underscore"\n      ],\n      "returns": "_"\n    },\n    "backbone": {\n      "rname": "backbone",\n      "js": [\n        "backbone/backbone"\n      ],\n      "returns": "Backbone"\n    },\n    "rgrove-lazyload": {\n      "rname": "lazyload",\n      "js": [\n        "rgrove-lazyload/lazyload"\n      ],\n      "returns": "Lazyload"\n    },\n    "ractive": {\n      "rname": "ractive",\n      "js": [\n        "ractive/ractive-legacy"\n      ],\n      "returns": "Ractive"\n    },\n    "ractive-backbone": {\n      "rname": "ractive-backbone",\n      "js": [\n        "ractive-backbone/ractive-adaptors-backbone"\n      ],\n      "returns": "RactiveBackbone"\n    },\n    "ractive-events-tap": {\n      "rname": "ractive-events-tap",\n      "js": [\n        "ractive-events-tap/ractive-events-tap"\n      ],\n      "returns": "RactiveEventsTap"\n    },\n    "moment": {\n      "rname": "moment",\n      "js": [\n        "moment/moment"\n      ],\n      "returns": "moment"\n    },\n    "cartodb": {\n      "rname": "cartodb",\n      "js": [\n        "cartodb.js/dist/cartodb.uncompressed"\n      ],\n      "css": [\n        "cartodb.js/themes/css/cartodb"\n      ],\n      "ie": [\n        "cartodb.js/themes/css/cartodb.ie"\n      ],\n      "returns": "cartodb"\n    },\n    "mpConfig": {\n      "rname": "mpConfig",\n      "js": [\n        "minnpost-styles/dist/minnpost-styles.config"\n      ],\n      "returns": "mpConfig"\n    },\n    "mpFormatters": {\n      "rname": "mpFormatters",\n      "js": [\n        "minnpost-styles/dist/minnpost-styles.formatters"\n      ],\n      "returns": "mpFormatters"\n    }\n  }\n}\n'}),define("base",["jquery","underscore","backbone","lazyload","mpFormatters","text!../bower.json"],function(a,b,c,d,e,f){var g={};return f=JSON.parse(f),g.BaseApp=function(c){this.options=b.extend(this.baseDefaults||{},this.defaults||{},c||{}),this.name=this.options.name,this.options.el&&(this.el=this.options.el,this.$el=a(this.el),this.$=function(a){return this.$el.find(a)}),this.determinePaths(),this.renderAssests(),this.on("cssLoaded",function(){this.initialize.apply(this,arguments)})},b.extend(g.BaseApp.prototype,c.Events,{bower:f,baseDefaults:{jsonpProxy:"//mp-jsonproxy.herokuapp.com/proxy?url=",availablePaths:{local:{css:[".tmp/css/main.css"],images:"images/",data:"data/"},build:{css:["dist/[[[PROJECT_NAME]]].libs.min.css","dist/[[[PROJECT_NAME]]].latest.min.css"],images:"dist/images/",data:"dist/data/"},deploy:{css:["//s3.amazonaws.com/data.minnpost/projects/[[[PROJECT_NAME]]]/[[[PROJECT_NAME]]].libs.min.css","//s3.amazonaws.com/data.minnpost/projects/[[[PROJECT_NAME]]]/[[[PROJECT_NAME]]].latest.min.css"],images:"//s3.amazonaws.com/data.minnpost/projects/[[[PROJECT_NAME]]]/images/",data:"//s3.amazonaws.com/data.minnpost/projects/[[[PROJECT_NAME]]]/data/"}}},determinePaths:function(){var a;return b.isObject(this.options.paths)&&!b.isUndefined(this.options.deployment)?this.options.paths:(this.options.deployment="deploy",-1!==window.location.host.indexOf("localhost")&&(this.options.deployment="local",a=this.parseQueryString(),b.isObject(a)&&b.isString(a.mpDeployment)&&(this.options.deployment=a.mpDeployment)),this.options.paths=this.options.availablePaths[this.options.deployment],this.options.paths)},renderAssests:function(){var a=this,c=[];b.each(this.bower.dependencyMap,function(d){d.css&&b.each(d.css,function(b){"local"===a.options.deployment?(b=b.match(/^(http|\/\/)/)?b:"bower_components/"+b+".css",c.push(a.makePath(b))):b.match(/^(http|\/\/)/)&&c.push(a.makePath(b))})}),b.each(this.options.paths.css,function(b){c.push(a.makePath(b))}),d.css(c,function(){this.trigger("cssLoaded")},null,this)},makePath:function(a){return a=a.split("[[[PROJECT_NAME]]]").join(this.name),this.options.basePath&&!a.match(/^(http|\/\/)/)&&(a=this.options.basePath+a),a},overrideBackboneAJAX:function(){c.ajax=function(){var a=arguments[0];return a.dataTypeForce!==!0?this.jsonpRequest(a):c.$.ajax.apply(c.$,[a])}},isMSIE:function(){var a=/(msie) ([\w.]+)/i.exec(navigator.userAgent);return a?parseInt(a[2],10):!1},parseQueryString:function(){var a={},c=function(a){return decodeURIComponent(a.replace(/\+/g," "))},d=location.search.substring(1),e=d.split("&");return b.each(e,function(b){var d=b.split("=");d.length>1&&(a[c(d[0])]=c(d[1]))}),a},jsonpRequest:function(b){return b.dataType="jsonp",this.options.jsonpProxy&&-1===b.url.indexOf("callback=")&&(b.jsonpCallback="mpServerSideCachingHelper"+e.hash(b.url),b.url=this.options.jsonpProxy+encodeURIComponent(b.url)+"&callback="+b.jsonpCallback,b.cache=!0),a.ajax.apply(a,[b])},dataRequest:function(c){var d=this,e=!1,f=[];return c=b.isArray(name)?c:[c],0===this.options.paths.data.indexOf("http")&&(e=!0),b.each(c,function(b){var c=e?d.jsonpRequest(d.options.paths.data+b):a.getJSON(d.options.paths.data+b);f.push(c)}),a.when.apply(a,f)},initialize:function(){}}),g.BaseApp.extend=c.Model.extend,g}),define("text!templates/application.mustache",[],function(){return'<div class="message-container"></div>\n\n<div class="content-container ">\n  {{#winterParkingRestriction}}\n    <p class="parking-restrictions"><strong>Winter parking restrictions in effect.</strong>  This means that you cannot park on the even side of the street until April 1st or until notified by the City. This does not apply during snow emergencies.</p>\n  {{/winterParkingRestriction}}\n\n  {{^isSnowEmergency}}\n    <div class="narrative">\n      <h3>There is no snow emergency at the moment</h3>\n      <p>To plan ahead, set a snow emergency day:\n        <select value="{{ chooseDay }}">\n          <option value="">&lt;pick a day&gt;</option>\n          <option value="1">Day 1</option>\n          <option value="2">Day 2</option>\n          <option value="3">Day 3</option>\n        </select>\n      </p>\n    </div>\n  {{/isSnowEmergency}}\n\n  {{#isSnowEmergency}}\n    <div class="narrative">\n      <h3>{{ snowEmergencyTitle }}</h3>\n\n      <div class="snow-emergency-day-status">\n        <p>{{ snowEmergencyText }}\n          {{#(lastSnowEmergencyDay !== null)}}\n            The current snow emergency began on {{ lastSnowEmergencyDay.format(\'MMMM Do\') }} at 9 p.m.\n          {{/()}}\n        </p>\n      </div>\n    </div>\n\n    <form on-submit="formSubmit" class="location-search-form">\n      <p>Search for an address or use your location to see parking restrictions near you.</p>\n\n      <input type="text" class="address-input" value="{{ address }}" placeholder="Enter address, ex. 900 6th Ave SE, Minneapolis, MN 55414" />\n\n      <button type="submit" class="address-button" title="Search address" on-tap="addressSearch">Search</button>\n\n      {{#canGeoLocate}}\n        <button type="submit" class="geolocation-button" title="Use the location of your device" on-tap="geolocateSearch"></button>\n      {{/canGeoLocate}}\n    </form>\n\n    <div class="narrative focus-found">\n      {{#(isLoading === true)}}\n        {{>loading}}\n      {{/())}}\n\n      {{#messages}}\n        <p class="messages">{{ messages }}</p>\n      {{/messages}}\n\n      {{#(nearParking !== undefined)}}\n        {{#nearParking}}\n          <p>Looks like you shouldn\'t park here<sup>&dagger;</sup>.  Check the map for more detail.</p>\n        {{/nearParking}}\n\n        {{^nearParking}}\n          <p>Looks like you are clear to park here<sup>&dagger;</sup>.  Check the map for more detail.</p>\n        {{/nearParking}}\n\n        <div class="note">And follow any other posted parking signs.</div>\n      {{/()}}\n    </div>\n\n    <div id="snow-emergency-map"></div>\n  {{/isSnowEmergency}}\n\n</div>\n\n<div class="footnote-container">\n  <div class="footnote">\n    <p><sup>&dagger;</sup>\n      Snow plow route data provided by the City of Minneapolis, last received on {{ routeLastUpdate.format(\'MMM DD, YYYY\') }}.\n      Though we try to keep the route data up to date, it may be subject to changes.  An offical map is also available from the City\'s <a href="http://www.ci.minneapolis.mn.us/snow/snowstreetlookup" target="_blank">street lookup service</a>.\n      MinnPost is not responsible for any traffic violations that may occur as a result of using this application.\n    </p>\n\n    <p>\n      Some map data &copy; OpenStreetMap contributors; licensed under the <a href="http://www.openstreetmap.org/copyright" target="_blank">Open Data Commons Open Database License</a>.\n      Some map design &copy; MapBox; licensed according to the <a href="http://mapbox.com/tos/" target="_blank">MapBox Terms of Service</a>.\n      Location geocoding provided by <a href="http://www.mapquest.com/" target="_blank">Mapquest</a> and is not guaranteed to be accurate.\n      Some mapping services provided by <a href="http://cartodb.com/attributions" target="_blank">CartoDB</a>.\n      <a href="http://thenounproject.com/term/snowed-in/30065/" target="_blank">Snowed In</a> designed by Claire Jones from the Noun Project.\n      Some code, techniques, and data on <a href="https://github.com/minnpost/minnpost-snow-emergency" target="_blank">Github</a>.\n    </p>\n  </div>\n</div>\n'}),define("text!templates/loading.mustache",[],function(){return'<div class="loading-container">\n  <div class="loading"><span>Loading...</span></div>\n</div>'}),require(["jquery","underscore","backbone","ractive","ractive-events-tap","cartodb","moment","base","text!templates/application.mustache","text!templates/loading.mustache"],function(a,b,c,d,e,f,g,h,i,j){var k=window.L;f=window.cartodb;var l=h.BaseApp.extend({defaults:{name:"minnpost-snow-emergency",el:".minnpost-snow-emergency-container",routeLastUpdate:g("2014-11-10"),lastSnowEmergencyDay:g("2014-01-01"),minneapolisExtent:[-93.3292,44.8896,-93.1978,45.0512],mapQuestQuery:"http://open.mapquestapi.com/geocoding/v1/address?key=Fmjtd%7Cluur20a7n0%2C8n%3Do5-9a1s9f&outFormat=json&countrycodes=us&maxResults=1&location=[[[ADDRESS]]]&callback=?",cartoDBQuery:"http://zzolo-minnpost.cartodb.com/api/v2/sql?format=GeoJSON&callback=?&q=[[[QUERY]]]",cartoDBLayer:"http://zzolo-minnpost.cartodb.com/api/v2/viz/3fb9a154-9604-11e3-b5ac-0e625a1c94a6/viz.json",cartoDBTable:"snow_routes_20141110",defaultAccuracy:15,colors:{day1:"#009BC2",day2:"#7525BB",day3:"#FF7424",dontPark:"#B22715"},restrictions:{day1:"That means from 9 p.m. to 8 a.m. (overnight), you cannot park on streets that are marked as snow emergency routes.  These are routes with specific signs or blue street signs.",day2:"That means from 8 a.m. to 8 p.m., you cannot park on the even side of non-snow emergency routes or on either side of parkways.",day3:"That means from 8 a.m. to 8 p.m., you cannot park on the odd side of non-snow emergency routes."},winterParkingRestriction:!1},initialize:function(){var a=this;this.data={},this.snowEmergencyState(),this.data.routeLastUpdate=this.options.routeLastUpdate,this.data.snowEmergencyDay=this.options.snowEmergencyDay,this.data.isSnowEmergency=this.options.isSnowEmergency,this.data.lastSnowEmergencyDay=this.options.lastSnowEmergencyDay,this.data.snowEmergencyTitle=this.options.snowEmergencyTitle,this.data.snowEmergencyText=this.options.snowEmergencyText,this.data.winterParkingRestriction=this.options.winterParkingRestriction,this.data.isLoading=!1,this.data.nearParking=void 0,this.data.chooseDay=void 0,this.data.canGeoLocate=this.checkGeolocate(),this.mainView=new d({el:this.$el,template:i,data:this.data,partials:{loading:j}}),this.mainView.observe("isSnowEmergency",function(c){c===!0&&b.defer(b.bind(a.makeMap,a))},{defer:!0}),this.mainView.observe("chooseDay",function(c){c=parseInt(c,10),b.isNaN(c)||(this.set("lastSnowEmergencyDay",null),this.set("snowEmergencyDay",c),this.set("isSnowEmergency",!0),this.set("snowEmergencyTitle","It is Day "+c+" of the snow emergency"),this.set("snowEmergencyText",a.options.restrictions["day"+c]))}),this.mainView.on("formSubmit",function(b){b.original.preventDefault(),a.searchAddress(this.get("address"))}),this.mainView.on("geolocateSearch",function(b){b.original.preventDefault(),a.watchID||a.geolocate()})},makeMap:function(){var a=this;this.map=new k.Map("snow-emergency-map",{center:[44.970753517451946,-93.26185335000002],zoom:12,minZoom:10,maxZoom:17,scrollWheelZoom:!1}),k.tileLayer("//{s}.tiles.mapbox.com/v3/minnpost.map-wi88b700/{z}/{x}/{y}.png").addTo(this.map),this.map.removeControl(this.map.attributionControl),f.createLayer(this.map,this.options.cartoDBLayer).addTo(this.map).on("done",function(){}).on("error",function(){a.issue("There was an error loading the snow route information.")})},geolocate:function(){var a=this;this.resetSearch(),this.watchID=navigator.geolocation.watchPosition(function(b){a.closestRoutes(b.coords.latitude,b.coords.longitude,b.coords.accuracy)},function(){a.issue("There was an error trying to find your position.")},{maximumAge:5e3})},searchAddress:function(c){var d=this;c&&(d.resetSearch(),this.watchID&&(navigator.geolocation.clearWatch(this.watchID),this.watchID=void 0),a.getJSON(this.options.mapQuestQuery.replace("[[[ADDRESS]]]",encodeURIComponent(c))).done(function(a){var c;b.size(a.results[0].locations)>0&&b.isObject(a.results[0].locations[0].latLng)?(c=a.results[0].locations[0].latLng,d.closestRoutes(c.lat,c.lng)):d.issue("That address could not be found, please try another or more specific one.")}).error(function(){d.issue("That address could not be found, please try another or more specific one.")}))},closestRoutes:function(b,c,d){var e,f,g,h=this;return b<this.options.minneapolisExtent[1]||b>this.options.minneapolisExtent[3]||c<this.options.minneapolisExtent[0]||c>this.options.minneapolisExtent[2]?void this.issue("This location does not seem to be in Minneapolis."):(this.location=[b,c],this.accuracy=d||this.options.defaultAccuracy,this.map.setView([b,c],17),g="ST_Distance(ST_SetSRID(the_geom, 4326), ST_SetSRID(ST_MakePoint("+c+", "+b+") , 4326))",e="SELECT the_geom, day1, day2, day3, cartodb_id, id, "+g+" AS distance FROM "+this.options.cartoDBTable+" ORDER BY "+g+" LIMIT 1",f="SELECT the_geom, day1, day2, day3, cartodb_id, id, "+g+" AS distance FROM "+this.options.cartoDBTable+" WHERE day"+this.data.snowEmergencyDay+" = 0 ORDER BY "+g+" LIMIT 20",void a.when(a.getJSON(this.options.cartoDBQuery.replace("[[[QUERY]]]",encodeURIComponent(e))),a.getJSON(this.options.cartoDBQuery.replace("[[[QUERY]]]",encodeURIComponent(f)))).done(function(a,b){"success"===a[1]&&"success"===b[1]&&h.renderRoutes(a[0],b[0])}).fail(function(){h.issue("There was an issue determining the closest snow emergency routes.")}))},renderRoutes:function(c,d){var e,f=this;this.mainView.set("messages",""),b.isObject(this.routeLayer)&&(this.map.removeLayer(this.routeLayer),this.map.removeLayer(this.locationLayer)),this.mainView.set("isLoading",!1),e=0===c.features[0].properties["day"+this.data.snowEmergencyDay.toString()]?!0:!1,this.mainView.set("nearParking",e),this.routeLayer=new k.geoJson(d,{style:function(){return{fillColor:f.options.colors.dontPark,color:f.options.colors.dontPark,weight:1,opacity:.5,fillOpacity:.75,clickable:!1}}}),this.locationLayer=k.circleMarker(this.location,{radius:8,fillColor:"#10B21A",color:"#10B21A",weight:this.accuracy/3,opacity:.25,fillOpacity:.85,clickable:!1}),this.map.addLayer(this.routeLayer),this.map.addLayer(this.locationLayer),this.watchID&&this.scrolled||(a("html, body").stop().animate({scrollTop:this.$el.find(".focus-found").offset().top-15},750),this.scrolled=this.watchID?!0:!1)},resetSearch:function(){this.mainView.set("isLoading",!0),this.mainView.set("nearParking",void 0),this.mainView.set("messages",!1)},checkGeolocate:function(){return b.isObject(navigator)&&b.isObject(navigator.geolocation)},issue:function(a){this.mainView.set("isLoading",!1),this.mainView.set("messages",a)},snowEmergencyState:function(){var a=g().zone(-3600).local(),b=g(this.options.lastSnowEmergencyDay).zone(-3600).local(),c={};g.isMoment(this.options.lastSnowEmergencyDay)&&(c={day1before:g(b).hour(2).minute(0),day1start:g(b).hour(21).minute(0),day2start:g(b).add(1,"d").hour(8).minute(0),day2over:g(b).add(1,"d").hour(20).minute(0),day3start:g(b).add(2,"d").hour(8).minute(0),day3over:g(b).add(2,"d").hour(20).minute(0)},a.isAfter(c.day3over)||a.isBefore(c.day1before)?this.options.isSnowEmergency=!1:(this.options.isSnowEmergency=!0,a.isAfter(c.day1before)&&a.isBefore(c.day1start)?(this.options.snowEmergencyDay=1,this.options.snowEmergencyTitle="Snow emergency declared, Day 1 restrictions start at 9 p.m.",this.options.snowEmergencyText=this.options.restrictions.day1):(a.isAfter(c.day1start)||a.isSame(c.day1start))&&a.isBefore(c.day2start)?(this.options.snowEmergencyDay=1,this.options.snowEmergencyTitle="It is Day 1 of a snow emergency",this.options.snowEmergencyText=this.options.restrictions.day1):(a.isAfter(c.day2start)||a.isSame(c.day2start))&&a.isBefore(c.day2over)?(this.options.snowEmergencyDay=2,this.options.snowEmergencyTitle="It is Day 2 of a snow emergency",this.options.snowEmergencyText=this.options.restrictions.day2):(a.isAfter(c.day2over)||a.isSame(c.day2over))&&a.isBefore(c.day3start)?(this.options.snowEmergencyDay=3,this.options.snowEmergencyTitle="Snow emergency in effect, Day 3 restrictions start at 8 a.m.",this.options.snowEmergencyText=this.options.restrictions.day3):(a.isAfter(c.day3start)||a.isSame(c.day3start))&&a.isBefore(c.day3over)&&(this.options.snowEmergencyDay=3,this.options.snowEmergencyTitle="It is Day 3 of a snow emergency",this.options.snowEmergencyText=this.options.restrictions.day3)))}});return new l({})}),define("app",function(){});